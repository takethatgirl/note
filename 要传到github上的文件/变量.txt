在 文件中可以定义全局变量(global variable)，它的作用域是整个程序。如果在文件A中定义了一个变量a int a=3； 
在文件B中可以再定义一个变量a int a=5; 
在分别对文件A和文件B进行编译时不会有问题。但是，如果一个程序包括文件A和文件B，那么在进行连接时，会报告出错，因为在同一个程序中有两个同名的变量，认为是对变量的重复定义。 
可 以通过extern声明同一程序中的两个文件中的同名变量是同一个变量。如果在文件B中有以下声明： 
extem int a； 
表示文件B中的变量a是在其他文件中已定义的变量。由于有此声明，在程序编译和连接后，文件A的变量a的作用域扩展到了文件B。如果在文件B中不再对a赋值，则在文件B中用以下语句输出的是文件A中变量a的值： cout<
namespace nsl 
{ const int RATE=0.08； //常量 
doublepay； //变量 
doubletax() //函数 
{return a*RATE；} 
namespacens2 //嵌套的命名空间 
{int age；} 
} 


C C++ python C# shell 