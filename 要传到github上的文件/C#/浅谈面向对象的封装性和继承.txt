面向对象和面向过程的思想区别是：当一个（类的）函数想要办成某件事（实现某个功能）的时候，它会先想到一个能办成此事的人（类），然后new出此对象，让此对象调用自身的功能函数办成此事（实现此功能）。
而这种能够（需要）向外界（主调函数）提供服务的函数需要被定义成public。
有些函数不直接对外提供服务，只是服务于其他直接为外界提供服务的成员函数，这类函数称为工具函数或辅助函数，定义成private【比如多个public函数都使用了某段代码，为了重用这段代码，可以把这段代码提取出来作为一个单独的函数，这个函数就可以定义成private】。

简单来说，我们只关注这个人（对象）能做成什么事情，而不关注他的品德（属性），所以索性把属性定义成private，外界接触不到，剪掉了枝枝蔓蔓，无关牵连，使设计更加脉络清晰。
但是有时候，主调函数还是蛮介意对象的品德（属性），这时候我们会读取属性，甚至调教一下他的品德（为属性赋值），为了防止赋给不合理的值，我们采取的措施是：
属性仍旧是private，通过访问器访问之，但是访问器是public的，访问器里面存在逻辑审查，保证其合理性。

那什么时候使用protected呢？
有些时候，派生类从基类继承来的