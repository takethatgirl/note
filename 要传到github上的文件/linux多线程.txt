零碎
1，线程标志符 pthread_t，typedef unsigned long pthread_t
--------------------------------------------------------------------------------------------
创建线程
int pthread_create __P ((pthread_t *__thread, __const pthread_attr_t *__attr,
void *(*__start_routine) (void *), void *__arg));
第一个参数是线程标志符的指针，第二个参数设置线程的属性（默认NULL），
第三个参数是函数地址，第四个参数是运行函数的参数（默认NULL）。
成功返回0，失败返回非0。
--------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
线程函数的一般格式是void *funtion(void *arg)，在使用pthread_create时，传函数自是不用说了，只要将函数名写入就好了。而怎么传参数呢？
其实传参数，也只是传一个参数的地址就好了，不过这里需要有一些技巧。
（1）如果有几个参数，你需要用struct结构体进行封装
（2）在把参数的地址传入了之后呢，还没有结束，因为这是你传进线程函数的是个void *型，那么我们需要在线程函数里对你的参数进行一个强制类型转换，才能对参数进行操作
-------------------------------------------------------------------------------------------------------
  1 #include<stdio.h>
  2 #include<pthread.h>
  3 
  4 void* myThread1(){
  5     for(int i = 0;i < 10;++i) {
  6         sleep(1);
  7         printf("Thread-1: i = %d\n",i);
  8     }           
  9     return NULL;  
 10 }                       
 11 int main() {                  
 12     pthread_t id = 0;           
 13     int ret;                      
 14     ret = pthread_create(&id,NULL,(void*)myThread1,NULL);
 15     if(ret != 0) {         
 16         printf("create a thread failed!\n");
 17     }         
 18     for(int j = 0;j < 10; ++j) {
 19         sleep(1);
 20         printf("main thread: j = %d\n",j);
 21     }                 
 22     pthread_join(id,NULL);   //这一行不写，会造成子线程少输出i=10，因为 主线程return 0了，并没有等待子线程。
 23     return 0;     
 24 } 
------------------------------------------------------------------------------------------------------
互斥量

 